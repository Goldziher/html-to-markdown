name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install Dependencies
        run: uv sync --all-extras --dev

      - name: Load Cached Pre-Commit Dependencies
        id: cached-pre-commit-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Execute Pre-Commit
        run: uv run pre-commit run --show-diff-on-failure --color=always --all-files
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            if [[ "${{ runner.os }}" == "Windows" ]] && [[ -d ".venv" ]]; then
              echo "Removing existing .venv directory on Windows"
              rm -rf .venv
            fi
            uv sync --all-extras --dev
          shell: bash

      - name: Test
        env:
          COVERAGE_FILE: .coverage.${{ matrix.os }}-${{ matrix.python }}
        run: uv run pytest --cov=html_to_markdown --cov-report=term-missing

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage.${{ matrix.os }}-${{ matrix.python }}
          if-no-files-found: error
          retention-days: 7

  coverage:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-data
          path: coverage-data
          merge-multiple: true

      - name: Install dev deps (for coverage CLI)
        run: uv sync --all-extras --dev

      - name: Combine coverage
        run: |
          ls -la coverage-data || true
          # Move coverage files to root so coverage finds .coverage.*
          shopt -s nullglob
          for f in coverage-data/.coverage.*; do mv "$f" .; done
          uv run coverage combine

      - name: Enforce 100% merged coverage
        run: uv run coverage report --fail-under=100 --show-missing
