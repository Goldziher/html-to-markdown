---
name: Publish Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to publish (e.g., v2.5.1)"
        required: true
        type: string
      dry_run:
        description: "Dry run (skip actual publishing)"
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-crates:
    name: Publish Rust crates to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || '' }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            tag="${{ github.event.inputs.tag }}"
          else
            tag=${GITHUB_REF#refs/tags/}
          fi
          version=${tag#v}
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "Publishing version: $version"

      - name: Verify Cargo.toml version matches tag
        run: |
          cargo_version=$(grep '^version = ' Cargo.toml | head -1 | sed -E 's/version = "(.*)"/\1/')
          tag_version="${{ steps.version.outputs.version }}"
          if [ "$cargo_version" != "$tag_version" ]; then
            echo "Version mismatch! Cargo: $cargo_version, tag: $tag_version"
            exit 1
          fi
          echo "Cargo.toml version matches tag: $cargo_version"

      - name: Publish html-to-markdown-rs (core library)
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
        run: |
          cargo publish -p html-to-markdown-rs --token ${{ secrets.CARGO_TOKEN }}

      - name: Wait for crates.io to index
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
        run: sleep 30

      - name: Publish html-to-markdown-cli
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
        run: |
          cargo publish -p html-to-markdown-cli --token ${{ secrets.CARGO_TOKEN }}

      - name: Dry run - Skip crates.io publish
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true' }}
        run: |
          echo "DRY RUN: would publish html-to-markdown-rs and html-to-markdown-cli"

  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || '' }}

      - name: Build wheels
        uses: ./.github/actions/build-wheels
        with:
          python-version: "3.13"

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || '' }}

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build CLI binary for sdist
        run: cargo build --release --package html-to-markdown-cli

      - name: Prepare sdist with CLI
        run: python scripts/prepare_wheel.py

      - name: Build sdist
        run: maturin sdist --out dist/

      - name: Upload sdist
        uses: actions/upload-artifact@v5
        with:
          name: sdist
          path: dist/*.tar.gz
          retention-days: 7

  publish-pypi:
    name: Publish to PyPI
    needs:
      - build-wheels
      - build-sdist
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v6
        with:
          pattern: "wheels-*"
          merge-multiple: true
          path: dist/

      - name: Download sdist
        uses: actions/download-artifact@v6
        with:
          name: sdist
          path: dist/

      - name: List artifacts
        run: |
          echo "Artifacts ready for PyPI:"
          ls -lh dist/

      - name: Publish to PyPI
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Dry run - Skip PyPI publish
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true' }}
        run: |
          echo "DRY RUN: would publish the following packages to PyPI"
          ls -1 dist/*.whl dist/*.tar.gz

  publish-gem:
    name: Push gem to RubyGems.org
    needs: publish-crates
    if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || '' }}
          persist-credentials: false

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
          working-directory: crates/html-to-markdown-rb

      - name: Prepare gem assets
        run: ruby scripts/prepare_ruby_gem.rb

      - name: Configure trusted publishing credentials
        uses: rubygems/configure-rubygems-credentials@v1.0.0

      - name: Release gem
        working-directory: crates/html-to-markdown-rb
        env:
          BUNDLE_GEMFILE: Gemfile
        run: bundle exec rake release

  publish-npm-node:
    name: Publish html-to-markdown-node to npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || '' }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Download NAPI artifacts from release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}"
          cd crates/html-to-markdown-node
          gh release download "$tag" --pattern "*.node" --dir . || echo "No prebuilt .node files"

      - name: Install dependencies
        working-directory: crates/html-to-markdown-node
        run: pnpm install

      - name: Build Node bindings
        working-directory: crates/html-to-markdown-node
        run: pnpm run build

      - name: Publish to npm
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
        working-directory: crates/html-to-markdown-node
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --access public --no-git-checks

      - name: Dry run - Skip npm publish
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true' }}
        run: |
          echo "DRY RUN: would publish html-to-markdown-node to npm"

  publish-npm-wasm:
    name: Publish html-to-markdown-wasm to npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || '' }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build WASM (all targets)
        working-directory: crates/html-to-markdown-wasm
        env:
          RUSTFLAGS: '--cfg getrandom_backend="wasm_js"'
        run: |
          pnpm install
          pnpm run build:all

      - name: Remove wasm-pack gitignores
        working-directory: crates/html-to-markdown-wasm
        run: find dist dist-node dist-web -maxdepth 1 -name ".gitignore" -delete

      - name: Publish to npm
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
        working-directory: crates/html-to-markdown-wasm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --access public --no-git-checks

      - name: Dry run - Skip npm publish
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true' }}
        run: |
          echo "DRY RUN: would publish html-to-markdown-wasm to npm"

  verify:
    name: Verify publications
    needs:
      - publish-crates
      - publish-pypi
      - publish-gem
      - publish-npm-node
      - publish-npm-wasm
    runs-on: ubuntu-latest
    if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
    steps:
      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            tag="${{ github.event.inputs.tag }}"
          else
            tag=${GITHUB_REF#refs/tags/}
          fi
          version=${tag#v}
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Verify crates.io publication
        run: |
          version="${{ steps.version.outputs.version }}"
          if cargo search html-to-markdown-rs | grep -q "html-to-markdown-rs = \"$version\""; then
            echo "html-to-markdown-rs indexed"
          else
            echo "html-to-markdown-rs not yet indexed"
          fi
          if cargo search html-to-markdown-cli | grep -q "html-to-markdown-cli = \"$version\""; then
            echo "html-to-markdown-cli indexed"
          else
            echo "html-to-markdown-cli not yet indexed"
          fi

      - name: Verify npm publication
        run: |
          version="${{ steps.version.outputs.version }}"
          npm view html-to-markdown-node@$version version || true
          npm view html-to-markdown-wasm@$version version || true

      - name: Display installation commands
        run: |
          version="${{ steps.version.outputs.version }}"
          echo "npm install html-to-markdown-node@$version"
          echo "npm install html-to-markdown-wasm@$version"
          echo "pip install html-to-markdown==$version"
          echo "cargo install html-to-markdown-cli --version $version"
          echo "brew tap goldziher/tap && brew install html-to-markdown"
